<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title><%= title || 'ISN Document Management' %> - SafetySync Pro</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
  <style>
    body { background-color:#f8f9fa; font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; }
    .navbar { background:linear-gradient(45deg,#343a40,#495057)!important; box-shadow:0 2px 4px rgba(0,0,0,.1); }
    .navbar-brand { font-weight:bold; color:#fff!important; }
    .dashboard-card { border:none; border-radius:12px; box-shadow:0 4px 6px rgba(0,0,0,.1); transition:transform .3s ease, box-shadow .3s ease; background:#fff; }
    .dashboard-card:hover { transform:translateY(-5px); box-shadow:0 8px 15px rgba(0,0,0,.2); }
    .stats-card { border-radius:15px; padding:1.5rem; color:#fff; text-align:center; margin-bottom:2rem; }
    .bg-gradient-purple { background:linear-gradient(45deg,#6f42c1,#5a2d91); }
    .bg-gradient-success { background:linear-gradient(45deg,#28a745,#20c997); }
    .bg-gradient-info { background:linear-gradient(45deg,#17a2b8,#138496); }
    .bg-gradient-warning { background:linear-gradient(45deg,#ffc107,#e0a800); }
    .category-card { margin-bottom:1.5rem; border-left:4px solid #6f42c1; }
    .category-header { background:linear-gradient(45deg,#f8f9fa,#e9ecef); border-radius:8px 8px 0 0; padding:1rem; border-bottom:1px solid #dee2e6; }
    .document-item { padding:.75rem 1rem; border-bottom:1px solid #f1f3f4; transition:background-color .2s ease; }
    .document-item:hover { background-color:#f8f9fa; }
    .document-item:last-child { border-bottom:none; }
    .badge-status { font-size:.75rem; padding:.35rem .65rem; }
    .btn-modern { border-radius:8px; padding:.5rem 1rem; font-weight:500; transition:all .3s ease; }
    .btn-modern:hover { transform:translateY(-2px); box-shadow:0 4px 8px rgba(0,0,0,.15); }
    .progress-modern { height:8px; border-radius:4px; background-color:#e9ecef; }
    .progress-bar-modern { border-radius:4px; transition:width .6s ease; background:linear-gradient(45deg,#6f42c1,#5a2d91); }
    .main-content { padding:2rem 0; }
    .page-header { margin-bottom:2rem; text-align:center; }
    .page-title { color:#343a40; font-weight:600; margin-bottom:.5rem; }
    .page-subtitle { color:#6c757d; font-size:1.1rem; }
    .isn-theme { color:#6f42c1; }
  </style>
</head>
<body>
  <!-- Navigation -->
  <nav class="navbar navbar-expand-lg navbar-dark">
    <div class="container">
      <a class="navbar-brand" href="/">
        <i class="fas fa-shield-alt me-2"></i>SafetySync Pro
      </a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav me-auto">
          <li class="nav-item"><a class="nav-link" href="/">Dashboard</a></li>
          <li class="nav-item"><a class="nav-link" href="/ims-index">IMS Index</a></li>
          <li class="nav-item"><a class="nav-link active" href="/isn-index">ISN Index</a></li>
          <li class="nav-item"><a class="nav-link" href="/documents">Documents</a></li>
          <li class="nav-item"><a class="nav-link" href="/reports">Reports</a></li>
        </ul>
      </div>
    </div>
  </nav>

  <!-- Main Content -->
  <div class="container main-content">
    <!-- Page Header -->
    <div class="page-header">
      <h1 class="page-title">
        <i class="fas fa-network-wired me-2 isn-theme"></i>ISN Document Index
      </h1>
      <p class="page-subtitle">Infrastructure Safety Network categories and status</p>
    </div>

    <!-- Statistics Cards -->
    <div class="row mb-4">
      <div class="col-md-3">
        <div class="stats-card bg-gradient-purple">
          <div class="d-flex align-items-center justify-content-between">
            <div>
              <h3 class="mb-0"><%= (stats && stats.totalCategories) || 0 %></h3>
              <p class="mb-0">Categories</p>
            </div>
            <i class="fas fa-folder-open fa-2x opacity-75"></i>
          </div>
        </div>
      </div>
      <div class="col-md-3">
        <div class="stats-card bg-gradient-success">
          <div class="d-flex align-items-center justify-content-between">
            <div>
              <h3 class="mb-0"><%= (stats && stats.totalDocuments) || 0 %></h3>
              <p class="mb-0">Total Documents</p>
            </div>
            <i class="fas fa-file-alt fa-2x opacity-75"></i>
          </div>
        </div>
      </div>
      <div class="col-md-3">
        <div class="stats-card bg-gradient-info">
          <div class="d-flex align-items-center justify-content-between">
            <div>
              <h3 class="mb-0"><%= (stats && stats.linkedDocuments) || 0 %></h3>
              <p class="mb-0">Linked Documents</p>
            </div>
            <i class="fas fa-link fa-2x opacity-75"></i>
          </div>
        </div>
      </div>
      <div class="col-md-3">
        <div class="stats-card bg-gradient-warning">
          <div class="d-flex align-items-center justify-content-between">
            <div>
              <h3 class="mb-0"><%= (stats && stats.completionRate) || 0 %>%</h3>
              <p class="mb-0">Completion Rate</p>
            </div>
            <i class="fas fa-chart-pie fa-2x opacity-75"></i>
          </div>
        </div>
      </div>
    </div>

    <!-- Progress Bar -->
    <div class="dashboard-card p-3 mb-4">
        <div class="d-flex justify-content-between align-items-center mb-2">
            <h6 class="mb-0">Overall Progress</h6>
            <small class="text-muted">
                <%= (stats && stats.linkedDocuments) || 0 %>/<%= (stats && stats.totalDocuments) || 0 %> documents linked
            </small>
        </div>
        <div class="progress progress-modern">
            <div class="progress-bar progress-bar-modern" style="width:<%= (stats && stats.completionRate) || 0 %>%"></div>
        </div>
    </div>


    <!-- Action Buttons -->
    <div class="dashboard-card p-3 mb-4">
      <div class="row">
        <div class="col-md-6">
          <button onclick="rebuildIndex(event)" class="btn btn-primary btn-modern me-2">
            <i class="fas fa-sync-alt me-1"></i> Rebuild Index
          </button>
          <button onclick="autoLinkDocuments(event)" class="btn btn-success btn-modern">
            <i class="fas fa-magic me-1"></i> Auto-Link ISN Documents
          </button>
        </div>
        <div class="col-md-6 text-end">
          <button class="btn btn-info btn-modern me-2" onclick="exportIndex()">
            <i class="fas fa-download me-1"></i> Export Index
          </button>
          <button class="btn btn-outline-primary btn-modern" onclick="showMandatoryRecords()">
            <i class="fas fa-clipboard-check me-1"></i> ISN Mandatory Records
          </button>
          <button class="btn btn-outline-success btn-modern" onclick="openAIGenerate()">
            <i class="fas fa-wand-magic-sparkles me-1"></i> New (AI)
           </button>
           <button class="btn btn-outline-secondary btn-modern me-2" onclick="openScanRoots()">
            <i class="fas fa-folder-open me-1"></i> Scan Roots
            </button>


        </div>
      </div>
    </div>

    <!-- Error Message -->
    <% if (typeof error !== 'undefined' && error) { %>
      <div class="alert alert-warning dashboard-card">
        <i class="fas fa-exclamation-triangle me-2"></i>
        <%= error %>
      </div>
    <% } %>

    <!-- Document Categories Listing -->
    <% if (categories && categories.length) { %>
      <% categories.forEach(function(category){ %>
        <div class="dashboard-card category-card">
          <div class="category-header">
            <div class="d-flex justify-content-between align-items-center">
              <div>
                <h5 class="mb-1"><i class="fas fa-folder me-2 isn-theme"></i><%= category.name %></h5>
                <small class="text-muted">
                  Type: <%= category.type %> | Level: <%= category.level %>
                  <% if (category.documentId) { %> | Doc ID: <%= category.documentId %><% } %>
                </small>
              </div>
              <div class="text-end">
                <span class="badge badge-status me-1" style="background:linear-gradient(45deg,#6f42c1,#5a2d91);"><%= category.totalDocuments || 0 %> docs</span>
                <span class="badge badge-status bg-success"><%= category.linkedDocuments || 0 %> linked</span>
              </div>
            </div>
          </div>
          <div class="category-content">
            <% if (category.children && category.children.length) { %>
              <div class="p-3">
                <h6 class="text-muted mb-2"><i class="fas fa-list me-1"></i>Documents in Category:</h6>
                <div class="row">
                  <% category.children.forEach(function(child){ %>
                    <div class="col-md-6 mb-2">
                      <% const enrichedChild = (category.enrichedChildren||[]).find(ec => ec.name === child); %>
                      <div class="document-item rounded">
                        <div class="d-flex justify-content-between align-items-center">
                          <span>
                            <% if (enrichedChild && enrichedChild.found) { %>
                              <i class="fas fa-file-circle-check text-success me-2"></i>
                            <% } else { %>
                              <i class="fas fa-file text-muted me-2"></i>
                            <% } %>
                            <%= child %>
                          </span>
                          <% if (enrichedChild && enrichedChild.found) { %>
                            <span class="badge bg-success badge-status">Linked</span>
                          <% } else { %>
                            <span class="badge bg-warning badge-status">Unlinked</span>
                          <% } %>
                        </div>
                        <% if (enrichedChild && enrichedChild.document) { %>
                          <small class="text-muted d-block mt-1">File: <%= enrichedChild.document.name %></small>
                        <% } %>
                        <% if (enrichedChild && enrichedChild.document) { %>
                            <button class="btn btn-sm btn-outline-secondary ms-2"
                                    onclick="aiImprove('<%= enrichedChild.document.id %>')">
                                Improve with AI
                            </button>
                            <% } %>
                      </div>
                    </div>
                  <% }); %>
                </div>
              </div>
            <% } else { %>
              <div class="p-3 text-center text-muted">
                <i class="fas fa-inbox fa-2x mb-2"></i>
                <p>No documents in this category</p>
              </div>
            <% } %>
          </div>
        </div>
      <% }); %>
    <% } else { %>
      <div class="dashboard-card p-4 text-center">
        <i class="fas fa-network-wired fa-3x text-muted mb-3"></i>
        <h4 class="text-muted">No ISN Categories Found</h4>
        <p class="text-muted">Try rebuilding the index or check your ISN data files.</p>
        <button onclick="rebuildIndex(event)" class="btn btn-primary btn-modern"><i class="fas fa-sync-alt me-1"></i> Rebuild Index</button>
      </div>
    <% } %>

    <!-- ISN Mandatory Records Section -->
    <div id="mandatory-records-section" class="dashboard-card p-4 mt-4" style="display:none;">
      <h5><i class="fas fa-clipboard-check me-2 isn-theme"></i>ISN Mandatory Records</h5>
      <div id="mandatory-records-content"></div>
    </div>
  </div>

  <!-- Scripts -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    function setBtnBusy(btn, busyText){ if(!btn) return ()=>{}; const html=btn.innerHTML; btn.innerHTML = '<span class="spinner-border spinner-border-sm me-1"></span>'+busyText; btn.disabled=true; return ()=>{btn.innerHTML=html; btn.disabled=false;}; }

    function rebuildIndex(ev){ const done=setBtnBusy(ev?.target,'Rebuilding...'); fetch('/api/rebuild-index',{method:'POST'}).then(r=>r.json()).then(d=>{ if(d.success) location.reload(); else throw new Error(d.error||'Rebuild failed'); }).catch(e=>alert('Error rebuilding index: '+e.message)).finally(done); }

    function autoLinkDocuments(ev){ const done=setBtnBusy(ev?.target,'Linking...'); fetch('/api/auto-link-isn-documents',{method:'POST'}).then(r=>r.json()).then(d=>{ if(d.success) location.reload(); else throw new Error(d.error||'Auto-linking failed'); }).catch(e=>alert('Error auto-linking ISN documents: '+e.message)).finally(done); }

    function exportIndex(){ window.location.href='/api/export-isn-index'; }

    function showMandatoryRecords() {
        const section = document.getElementById('mandatory-records-section');
        const content = document.getElementById('mandatory-records-content');

        if (section.style.display === 'none') {
            content.innerHTML = '<div class="text-center"><span class="spinner-border"></span> Loading...</div>';
            section.style.display = 'block';

            fetch('/api/isn-mandatory-records')
            .then(r => r.json())
            .then(data => {
                const records = (data && data.mandatoryRecords) ? data.mandatoryRecords : {};
                const keys = Object.keys(records);
                if (!keys.length) {
                content.innerHTML = '<p class="text-muted">No ISN mandatory records found.</p>';
                return;
                }

                content.innerHTML = keys.map(k => {
                const rec = records[k] || {};
                const linked = Array.isArray(rec.enrichedDocuments)
                    ? rec.enrichedDocuments.filter(d => d.manuallyLinked || d.autoDetected).length
                    : 0;
                return `
                    <div class="document-item rounded mb-2">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                        <i class="fas fa-clipboard-check isn-theme me-2"></i>
                        <strong>${k}</strong><br>
                        <small class="text-muted">${rec.description || ''}</small>
                        </div>
                        <span class="badge ${linked ? 'bg-success' : 'bg-warning'}">${linked} linked</span>
                    </div>
                    </div>`;
                }).join('');
            })
            .catch(err => {
                content.innerHTML = '<p class="text-danger">Error loading ISN mandatory records: ' + err.message + '</p>';
            });
        } else {
            section.style.display = 'none';
        }
        }

    function openAIGenerate(){
        const type = prompt('Doc type? (biosecurity | spray-diary | welfare-check)', 'biosecurity');
        if (!type) return;
        const extra = prompt('Any farm-specific details to include? (optional)', '');
        fetch('/api/ai/generate', {
            method:'POST', headers:{'Content-Type':'application/json'},
            body: JSON.stringify({ type, state:'SA', enterprise:'sheep', format: (type==='spray-diary'?'csv':'md'), customContext: extra })
        })
        .then(r=>r.json())
        .then(d=>{
            if (!d.success) throw new Error(d.message || 'AI generate failed');
            alert('Generated: ' + d.name + '\nSaved at: ' + d.path);
            // optional: trigger a reindex to pick it up
            return fetch('/api/rebuild-index', { method:'POST' });
        })
        .then(()=> location.reload())
        .catch(err=> alert('AI error: ' + err.message));
        }

        function aiImprove(documentId){
        if (!documentId) return alert('No document to improve here.');
        const instr = prompt('Improvement instructions (optional):', 'Tighten, ensure compliance cues, keep headings.');
        fetch('/api/ai/improve', {
            method:'POST', headers:{'Content-Type':'application/json'},
            body: JSON.stringify({ documentId, instructions: instr })
        })
        .then(r=>r.json())
        .then(d=>{
            if (!d.success) throw new Error(d.message || 'Improve failed');
            alert('Improved doc saved: ' + d.improvedName + '\nLocation: ' + d.improvedPath);
            return fetch('/api/rebuild-index', { method:'POST' });
        })
        .then(()=> location.reload())
        .catch(err=> alert('AI error: ' + err.message));
        }
  </script>
  <!-- Scan Roots Modal -->
        <div class="modal fade" id="scanRootsModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
            <div class="modal-header"><h5 class="modal-title">Scan Roots</h5></div>
            <div class="modal-body">
                <label class="form-label">Folders to scan (one per line)</label>
                <textarea id="scanRootsInput" class="form-control" rows="6"
                placeholder="E.g. I:\IMS&#10;I:\IMS\Integrated Management System\templates"></textarea>
                <div class="form-text">Windows paths OK. We’ll normalize backslashes.</div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button class="btn btn-primary" onclick="saveScanRoots()">Save & Reindex</button>
            </div>
            </div>
        </div>
        </div>

        <script>
        async function openScanRoots(){
        const res = await fetch('/api/config');
        const cfg = await res.json();
        document.getElementById('scanRootsInput').value = (cfg.documentsDirs||[]).join('\n');
        new bootstrap.Modal(document.getElementById('scanRootsModal')).show();
        }
        async function saveScanRoots(){
        const raw = document.getElementById('scanRootsInput').value || '';
        const documentsDirs = raw.split(/\r?\n/).map(s=>s.trim()).filter(Boolean);
        const r = await fetch('/api/config/scan-roots', {
            method:'POST', headers:{'Content-Type':'application/json'},
            body: JSON.stringify({ documentsDirs })
        });
        const j = await r.json();
        if (!r.ok || !j.success) { alert(j.error || 'Error saving folders'); return; }
        // Kick off a rebuild with your existing button action:
        await fetch('/api/rebuild-index', { method:'POST' }).catch(()=>{});
        location.reload();
        }
</script>

</body>
</html>
