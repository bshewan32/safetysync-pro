<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %> | SafetySync Pro</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <link rel="stylesheet" href="/css/styles.css">
  <style>
    .report-card {
      transition: all 0.3s ease;
      cursor: pointer;
    }
    .report-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 8px 25px rgba(0,0,0,0.15);
    }
    .report-preview {
      max-height: 600px;
      overflow-y: auto;
      border: 1px solid #ddd;
      border-radius: 8px;
      padding: 20px;
      background: white;
    }
    .metric-box {
      background: #f8f9ff;
      padding: 20px;
      border-radius: 8px;
      text-align: center;
      margin: 10px 0;
    }
    .metric-box h3 {
      font-size: 2rem;
      margin: 0;
      color: #667eea;
    }
    .loading-overlay {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(255,255,255,0.9);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 1000;
    }
  </style>
</head>
<body>
  <%- include('partials/header') %>
  
  <div class="container my-4">
    <div class="row">
      <div class="col-md-12">
        <div class="d-flex justify-content-between align-items-center mb-4">
          <h1><i class="fas fa-chart-line text-primary"></i> Executive Reports</h1>
          <div>
            <a href="/ai-settings" class="btn btn-outline-secondary">
              <i class="fas fa-robot"></i> AI Settings
            </a>
            <button class="btn btn-outline-primary" onclick="refreshData()">
              <i class="fas fa-sync-alt"></i> Refresh Data
            </button>
          </div>
        </div>
        
        <!-- Quick Metrics Dashboard -->
        <div class="row mb-4">
          <div class="col-md-3">
            <div class="metric-box">
              <h3 id="overallScore">--</h3>
              <p>Overall Compliance</p>
              <span class="badge bg-secondary" id="complianceStatus">Loading...</span>
            </div>
          </div>
          <div class="col-md-3">
            <div class="metric-box">
              <h3 id="criticalGaps">--</h3>
              <p>Critical Gaps</p>
              <span class="text-danger"><i class="fas fa-exclamation-triangle"></i></span>
            </div>
          </div>
          <div class="col-md-3">
            <div class="metric-box">
              <h3 id="totalDocuments">--</h3>
              <p>Total Documents</p>
              <span class="text-info"><i class="fas fa-file-alt"></i></span>
            </div>
          </div>
          <div class="col-md-3">
            <div class="metric-box">
              <h3 id="aiReadyGaps">--</h3>
              <p>AI Generable</p>
              <span class="text-success"><i class="fas fa-robot"></i></span>
            </div>
          </div>
        </div>
        
        <!-- Report Templates -->
        <div class="row">
          <% Object.keys(reportTemplates).forEach(templateKey => { %>
            <div class="col-md-4 mb-4">
              <div class="card report-card h-100" onclick="generateReport('<%= templateKey %>')">
                <div class="card-body">
                  <h5 class="card-title">
                    <% if (templateKey === 'compliance-audit') { %>
                      <i class="fas fa-clipboard-check text-primary"></i>
                    <% } else if (templateKey === 'regulatory-readiness') { %>
                      <i class="fas fa-gavel text-warning"></i>
                    <% } else { %>
                      <i class="fas fa-chart-bar text-success"></i>
                    <% } %>
                    <%= reportTemplates[templateKey].name %>
                  </h5>
                  <p class="card-text"><%= reportTemplates[templateKey].description %></p>
                  <ul class="list-unstyled small text-muted">
                    <% reportTemplates[templateKey].sections.forEach(section => { %>
                      <li><i class="fas fa-check-circle text-success me-1"></i> 
                        <%= section.replace(/-/g, ' ').replace(/\b\w/g, l => l.toUpperCase()) %>
                      </li>
                    <% }); %>
                  </ul>
                </div>
                <div class="card-footer bg-transparent">
                  <button class="btn btn-primary w-100">
                    <i class="fas fa-file-pdf"></i> Generate Report
                  </button>
                </div>
              </div>
            </div>
          <% }); %>
        </div>
        
        <!-- Custom Report Builder -->
        <div class="row">
          <div class="col-md-12">
            <div class="card">
              <div class="card-header">
                <h5><i class="fas fa-cogs"></i> Custom Report Builder</h5>
              </div>
              <div class="card-body">
                <div class="row">
                  <div class="col-md-6">
                    <div class="mb-3">
                      <label class="form-label">Report Focus</label>
                      <select class="form-select" id="customReportFocus">
                        <option value="all">All Areas</option>
                        <option value="mandatory">Mandatory Records Only</option>
                        <option value="documents">Document Compliance</option>
                        <option value="gaps">Gap Analysis</option>
                        <option value="risks">Risk Assessment</option>
                      </select>
                    </div>
                  </div>
                  <div class="col-md-6">
                    <div class="mb-3">
                      <label class="form-label">Detail Level</label>
                      <select class="form-select" id="customReportDetail">
                        <option value="executive">Executive Summary</option>
                        <option value="detailed">Detailed Analysis</option>
                        <option value="technical">Technical Deep Dive</option>
                      </select>
                    </div>
                  </div>
                </div>
                <div class="row">
                  <div class="col-md-12">
                    <div class="form-check mb-3">
                      <input class="form-check-input" type="checkbox" id="includeAIRecommendations" checked>
                      <label class="form-check-label" for="includeAIRecommendations">
                        <i class="fas fa-robot text-primary"></i> Include AI Strategic Recommendations
                      </label>
                    </div>
                    <button class="btn btn-outline-primary" onclick="generateCustomReport()">
                      <i class="fas fa-magic"></i> Generate Custom Report
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Report Preview Modal -->
  <div class="modal fade" id="reportModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-xl">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="reportModalTitle">
            <i class="fas fa-file-pdf"></i> Report Preview
          </h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body position-relative">
          <div class="loading-overlay d-none" id="reportLoading">
            <div class="text-center">
              <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Generating report...</span>
              </div>
              <p class="mt-2">Generating comprehensive report...</p>
              <small class="text-muted">This may take 30-60 seconds for AI analysis</small>
            </div>
          </div>
          
          <div class="report-preview" id="reportContent">
            <div class="text-center text-muted">
              <i class="fas fa-file-pdf fa-3x mb-3"></i>
              <p>Select a report template to generate</p>
            </div>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          <button type="button" class="btn btn-primary" onclick="exportReport()" id="exportBtn" disabled>
            <i class="fas fa-download"></i> Export PDF
          </button>
          <button type="button" class="btn btn-success" onclick="emailReport()" id="emailBtn" disabled>
            <i class="fas fa-envelope"></i> Email Report
          </button>
        </div>
      </div>
    </div>
  </div>
  
  <%- include('partials/footer') %>
  
  <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
  <script>
    let currentReportData = null;
    
    document.addEventListener('DOMContentLoaded', function() {
      loadQuickMetrics();
    });
    
    async function loadQuickMetrics() {
      try {
        const response = await fetch('/api/generate-report', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ reportType: 'compliance-audit', quickMetrics: true })
        });
        
        const data = await response.json();
        
        if (data.success) {
          const metrics = data.reportData.metrics;
          const gaps = data.reportData.gaps;
          
          document.getElementById('overallScore').textContent = metrics.overall.score + '%';
          document.getElementById('complianceStatus').textContent = metrics.overall.rating;
          document.getElementById('complianceStatus').className = `badge bg-${getRatingColor(metrics.overall.score)}`;
          
          document.getElementById('criticalGaps').textContent = gaps.critical.length;
          document.getElementById('totalDocuments').textContent = metrics.documents.total;
          
          // Count AI generable gaps
          const aiGenerable = [...gaps.critical, ...gaps.high, ...gaps.medium]
            .filter(gap => gap.aiGenerable).length;
          document.getElementById('aiReadyGaps').textContent = aiGenerable;
        }
      } catch (error) {
        console.error('Error loading metrics:', error);
      }
    }
    
    function getRatingColor(score) {
      if (score >= 90) return 'success';
      if (score >= 80) return 'primary';
      if (score >= 70) return 'info';
      if (score >= 60) return 'warning';
      return 'danger';
    }
    
    async function generateReport(reportType) {
      const modal = new bootstrap.Modal(document.getElementById('reportModal'));
      modal.show();
      
      document.getElementById('reportModalTitle').innerHTML = 
        `<i class="fas fa-file-pdf"></i> ${reportType.replace(/-/g, ' ').replace(/\b\w/g, l => l.toUpperCase())} Report`;
      
      document.getElementById('reportLoading').classList.remove('d-none');
      document.getElementById('reportContent').innerHTML = '';
      document.getElementById('exportBtn').disabled = true;
      document.getElementById('emailBtn').disabled = true;
      
      try {
        const response = await fetch('/api/generate-report', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ 
            reportType: reportType,
            options: {
              includeAI: true,
              detailLevel: 'detailed'
            }
          })
        });
        
        const data = await response.json();
        
        if (data.success) {
          currentReportData = data.reportData;
          document.getElementById('reportContent').innerHTML = data.reportHtml;
          document.getElementById('exportBtn').disabled = false;
          document.getElementById('emailBtn').disabled = false;
        } else {
          document.getElementById('reportContent').innerHTML = 
            `<div class="alert alert-danger">
              <i class="fas fa-exclamation-triangle"></i> 
              Error generating report: ${data.message}
            </div>`;
        }
      } catch (error) {
        console.error('Error generating report:', error);
        document.getElementById('reportContent').innerHTML = 
          `<div class="alert alert-danger">
            <i class="fas fa-exclamation-triangle"></i> 
            Network error generating report
          </div>`;
      } finally {
        document.getElementById('reportLoading').classList.add('d-none');
      }
    }
    
    async function generateCustomReport() {
      const focus = document.getElementById('customReportFocus').value;
      const detail = document.getElementById('customReportDetail').value;
      const includeAI = document.getElementById('includeAIRecommendations').checked;
      
      await generateReport('compliance-audit'); // Use base template but with custom options
    }

function exportReport() {
     if (!currentReportData) {
       alert('No report data available to export');
       return;
     }
     
     // Create a new window with the report content for printing
     const printWindow = window.open('', '_blank');
     const reportHtml = document.getElementById('reportContent').innerHTML;
     
     printWindow.document.write(`
       <!DOCTYPE html>
       <html>
       <head>
         <title>Compliance Report - ${currentReportData.metadata.companyName}</title>
         <style>
           body { font-family: Arial, sans-serif; margin: 20px; }
           .executive-report { max-width: none; }
           .score-card { display: flex; gap: 20px; margin: 20px 0; }
           .metric-box { background: #f8f9ff; padding: 20px; border-radius: 8px; text-align: center; flex: 1; }
           .metric-box.excellent { background: #d4edda; }
           .metric-box.good { background: #d1ecf1; }
           .metric-box.satisfactory { background: #fff3cd; }
           .metric-box h3 { font-size: 2rem; margin: 0; color: #667eea; }
           .gap-section.critical { background: #f8d7da; padding: 15px; border-radius: 8px; margin: 10px 0; }
           .gap-section.high { background: #fff3cd; padding: 15px; border-radius: 8px; margin: 10px 0; }
           .action-table { width: 100%; border-collapse: collapse; margin: 15px 0; }
           .action-table th, .action-table td { border: 1px solid #ddd; padding: 12px; text-align: left; }
           .action-table th { background: #667eea; color: white; }
           .ai-recommendations { background: #e3f2fd; padding: 20px; border-radius: 8px; margin: 20px 0; }
           @media print { .no-print { display: none; } }
         </style>
       </head>
       <body>
         ${reportHtml}
         <div class="no-print" style="margin-top: 30px; text-align: center;">
           <button onclick="window.print()" style="padding: 10px 20px; background: #667eea; color: white; border: none; border-radius: 5px; cursor: pointer;">
             Print Report
           </button>
           <button onclick="window.close()" style="padding: 10px 20px; background: #6c757d; color: white; border: none; border-radius: 5px; cursor: pointer; margin-left: 10px;">
             Close
           </button>
         </div>
       </body>
       </html>
     `);
     
     printWindow.document.close();
   }
   
   function emailReport() {
     if (!currentReportData) {
       alert('No report data available to email');
       return;
     }
     
     const subject = encodeURIComponent(`Compliance Report - ${currentReportData.metadata.companyName}`);
     const body = encodeURIComponent(`Please find attached the compliance report generated on ${new Date(currentReportData.metadata.generatedDate).toLocaleDateString()}.

Key Findings:
- Overall Compliance Score: ${currentReportData.metrics.overall.score}%
- Critical Gaps: ${currentReportData.gaps.critical.length}
- Total Action Items: ${currentReportData.actionPlan.totalActions}

This report was generated by SafetySync Pro.`);
     
     window.open(`mailto:?subject=${subject}&body=${body}`);
   }
   
   function refreshData() {
     const refreshBtn = document.querySelector('button[onclick="refreshData()"]');
     refreshBtn.disabled = true;
     refreshBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Refreshing...';
     
     // Trigger index rebuild
     fetch('/rebuild-index')
       .then(() => {
         // Reload metrics
         return loadQuickMetrics();
       })
       .then(() => {
         refreshBtn.disabled = false;
         refreshBtn.innerHTML = '<i class="fas fa-sync-alt"></i> Refresh Data';
         
         // Show success message
         const alert = document.createElement('div');
         alert.className = 'alert alert-success alert-dismissible fade show';
         alert.innerHTML = `
           <i class="fas fa-check-circle"></i> Data refreshed successfully!
           <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
         `;
         document.querySelector('.container').insertBefore(alert, document.querySelector('.row'));
         
         // Auto-dismiss after 3 seconds
         setTimeout(() => {
           alert.remove();
         }, 3000);
       })
       .catch(error => {
         console.error('Error refreshing data:', error);
         refreshBtn.disabled = false;
         refreshBtn.innerHTML = '<i class="fas fa-sync-alt"></i> Refresh Data';
         alert('Error refreshing data. Please try again.');
       });
   }
 </script>
</body>
</html>